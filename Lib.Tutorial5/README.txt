Tutorial5 複雑なメソッド呼び出し

このパッケージではC言語でコールバック関数を伴うメソッドを実装するにあたり必要なC言語側からスクリプトで定義されたメソッドを呼び出す方法について述べます。

目次
1. C言語からメソッドを呼び出す

Konoha言語ではC言語で定義される関数のうち、void (KonohaContext *kctx, KonohaStack *sfp)のインタフェースをもつ関数を呼び出すことが可能です。

メソッドの引数は変数sfpの1番目以降のインデックスに保持されており、またthisオブジェクトはsfp[0]に保持されています。
また、メソッドが返すべき型はsfp[K_RTNIDX].asObjectのオブジェクトの型と同じであるべきです。

C言語側からメソッドを呼び出す方法は以下のとおりです。

まず、メソッドの引数を配置するためのスタックを準備します。

次に、スタックに引数を順次、配置していきます。
ここで、引数として渡す値がオブジェクトか非オブジェクト(プリミティブ型, int, float, boolean)かによって配置するフィールドが異なる点に気をつけてください。

引数の準備ができたら実際にメソッドの呼び出しを行います。
実際の呼び出しには''のマクロが提供されています。このマクロによってメソッドの呼び出しが行われます。

メソッドの呼び出しが終わったら最後に返り値に処理を行います。
メソッドの返り値はsfp[0]に配置されています。
ここでも返り値の型がオブジェクトか非オブジェクト(プリミティブ型, int, float, boolean)かによって配置するフィールドが異なる点に気をつけてください。

以上でメソッドの呼び出しが完了します。

2. 実例
LibCで提供されているC関数qsort_r関数(インタフェースは以下の通り)を例に呼び出し方を説明します。

void qsort_r(void *base, size_t nmemb, size_t size,
  int (*compar)(const void *, const void *, void *),
  void *arg);


